/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IHM;

import Class.Direction;
import Class.LiaisonJavaC;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Administrateur
 */
public class TableauDeBord extends javax.swing.JFrame {

    
    public static LiaisonJavaC liaison = new LiaisonJavaC();
        
    private boolean etatPhareAvant = false;
    private boolean etatPhareArriere = false;
    private boolean etatClignotantGauche = false;
    private boolean etatClignotantDroit = false;
    private boolean etatEssuiGlace = false;
    private boolean etatWarning = false;
    
    private boolean virageDroite = false;
    private boolean virageGauche = false;
       
    private int vitesseVoiture = 0;
    
    public static LiaisonJavaC getLiaison(){
        
        return liaison;
    }    
    
    /**
     * Creates new form TableauDeBord
     */
    public TableauDeBord() {
        
        initComponents();
        
        final Toolkit toolkit = Toolkit.getDefaultToolkit();
        final Dimension screenSize = toolkit.getScreenSize();
        final int x = (screenSize.width - this.getWidth()) / 2;
        final int y = (screenSize.height - this.getHeight()) / 2;
        
        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bouttonAccelerer = new javax.swing.JButton();
        barRPM = new javax.swing.JProgressBar();
        fieldRPM = new javax.swing.JTextField();
        bouttonFrein = new javax.swing.JButton();
        buttonWarning = new javax.swing.JToggleButton();
        bouttonEssuiGlace = new javax.swing.JToggleButton();
        bouttonPhareAvant = new javax.swing.JToggleButton();
        bouttonPhareArriere = new javax.swing.JToggleButton();
        fieldVitesse = new javax.swing.JTextField();
        bouttonGauche = new javax.swing.JButton();
        bouttonDroite = new javax.swing.JButton();
        bouttonArriere = new javax.swing.JButton();
        bouttonClignoGauche = new javax.swing.JToggleButton();
        bouttonClignoDroit = new javax.swing.JToggleButton();
        bouttonPiloteAuto = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tableau de bord Quantique");
        setResizable(false);

        bouttonAccelerer.setText("Accélerer");
        bouttonAccelerer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonAccelererMousePressed(evt);
            }
        });

        barRPM.setForeground(new java.awt.Color(153, 255, 153));
        barRPM.setMaximum(10000);
        barRPM.setToolTipText("");

        fieldRPM.setEditable(false);
        fieldRPM.setFont(new java.awt.Font("Eras Bold ITC", 1, 26)); // NOI18N
        fieldRPM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldRPM.setText("0000 RPM");
        fieldRPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldRPMActionPerformed(evt);
            }
        });

        bouttonFrein.setText("Freiner");
        bouttonFrein.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonFreinMousePressed(evt);
            }
        });

        buttonWarning.setText("Warning");
        buttonWarning.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonWarningMousePressed(evt);
            }
        });

        bouttonEssuiGlace.setText("Essuie Glace");
        bouttonEssuiGlace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonEssuiGlaceMousePressed(evt);
            }
        });

        bouttonPhareAvant.setText("Phare Avant");
        bouttonPhareAvant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonPhareAvantMousePressed(evt);
            }
        });

        bouttonPhareArriere.setText("Phare Arrière");
        bouttonPhareArriere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonPhareArriereMousePressed(evt);
            }
        });

        fieldVitesse.setEditable(false);
        fieldVitesse.setFont(new java.awt.Font("Eras Bold ITC", 2, 48)); // NOI18N
        fieldVitesse.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldVitesse.setText("N");

        bouttonGauche.setText("Gauche");
        bouttonGauche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonGaucheMousePressed(evt);
            }
        });

        bouttonDroite.setText("Droite");
        bouttonDroite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonDroiteMousePressed(evt);
            }
        });

        bouttonArriere.setText("Arriere");
        bouttonArriere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonArriereMousePressed(evt);
            }
        });

        bouttonClignoGauche.setText("Clignotant Gauche");
        bouttonClignoGauche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonClignoGaucheMousePressed(evt);
            }
        });

        bouttonClignoDroit.setText("Clignotant Droit");
        bouttonClignoDroit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonClignoDroitMousePressed(evt);
            }
        });

        bouttonPiloteAuto.setText("Pilote Auto");
        bouttonPiloteAuto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bouttonPiloteAutoMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(barRPM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bouttonGauche, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bouttonFrein, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(bouttonDroite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fieldRPM, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fieldVitesse))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bouttonPhareAvant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(bouttonEssuiGlace, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(bouttonArriere, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(bouttonAccelerer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11)
                            .addComponent(bouttonPiloteAuto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(bouttonClignoGauche, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(bouttonClignoDroit, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(bouttonPhareArriere, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barRPM, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fieldVitesse)
                    .addComponent(fieldRPM, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bouttonPhareAvant, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bouttonEssuiGlace, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bouttonPhareArriere, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bouttonClignoGauche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bouttonClignoDroit, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bouttonAccelerer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bouttonArriere, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bouttonPiloteAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bouttonGauche, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bouttonFrein, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bouttonDroite, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bouttonAccelererMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonAccelererMousePressed
                
        if(vitesseVoiture < 4){
            
            vitesseVoiture++;
        }
        
        if(vitesseVoiture > 0){
        
            fieldVitesse.setText(""+vitesseVoiture);
        }
        else{
            
            fieldVitesse.setText("N");
        }
        
        liaison.Acceler(vitesseVoiture);
        
    }//GEN-LAST:event_bouttonAccelererMousePressed

    private void bouttonPhareArriereMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonPhareArriereMousePressed
        
        if(etatPhareArriere == false){
            
            liaison.PhareArriere(etatPhareArriere);
            
            etatPhareArriere = true;
        }
        else{
            
            liaison.PhareArriere(etatPhareArriere);
            
            etatPhareArriere = false;
        } 
        
    }//GEN-LAST:event_bouttonPhareArriereMousePressed

    private void bouttonPhareAvantMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonPhareAvantMousePressed
        
        if(etatPhareAvant == false){
                      
            liaison.PhareAvant(etatPhareAvant);
            
            etatPhareAvant = true;
        }
        else{
            
            liaison.PhareAvant(etatPhareAvant);
            
            etatPhareAvant = false;
        }
        
    }//GEN-LAST:event_bouttonPhareAvantMousePressed

    private void bouttonEssuiGlaceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonEssuiGlaceMousePressed
        
        if(etatEssuiGlace == false){
            
            liaison.EssuieGlace(etatEssuiGlace);
            
            etatEssuiGlace = true;
        }
        else{
            
            liaison.EssuieGlace(etatEssuiGlace);
            
            etatEssuiGlace = false;
        }
        
    }//GEN-LAST:event_bouttonEssuiGlaceMousePressed

    private void buttonWarningMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonWarningMousePressed
        
        if(etatWarning == false){
            
            liaison.Warning(etatWarning);
                        
            etatWarning = true;
        }
        else{
            
            liaison.Warning(etatWarning);
            
            etatWarning = false;
        }
        
    }//GEN-LAST:event_buttonWarningMousePressed

    private void bouttonFreinMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonFreinMousePressed
        
        if(vitesseVoiture > -1){
        
            vitesseVoiture--;
        }
        
        if(vitesseVoiture <= 0){
        
            if(vitesseVoiture == 0){
            
                fieldVitesse.setText("N");
            }
            else{
                              
                fieldVitesse.setText("R");
            }
        }
        else{
            
            fieldVitesse.setText(""+vitesseVoiture);
        }       
        
        liaison.Freiner(vitesseVoiture);       
        
    }//GEN-LAST:event_bouttonFreinMousePressed

    private void bouttonGaucheMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonGaucheMousePressed
        
        if(virageGauche == false){
         
            if(virageDroite == true){
                
                liaison.ToutDroit();
                
                bouttonDroite.setEnabled(true);
                
                virageDroite = false;
            }            
            else{
                
                liaison.Gauche();
                
                bouttonGauche.setEnabled(false);
                
                virageGauche = true;
            }            
        }
        
    }//GEN-LAST:event_bouttonGaucheMousePressed

    private void bouttonDroiteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonDroiteMousePressed
        
        if(virageDroite == false){
                     
            if(virageGauche == true){
                               
                liaison.ToutDroit();
                
                bouttonGauche.setEnabled(true);
                                
                virageGauche = false;
            }            
            else{
                                
                liaison.Droite();
                
                bouttonDroite.setEnabled(false);
                
                virageDroite = true;
            }
        }
        
    }//GEN-LAST:event_bouttonDroiteMousePressed

    private void fieldRPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldRPMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldRPMActionPerformed

    private void bouttonClignoGaucheMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonClignoGaucheMousePressed
        
        if(etatClignotantGauche == false)
        {
            liaison.ClignotantGauche(etatClignotantGauche);
            etatClignotantGauche = true;
        }
        else
        {
           liaison.ClignotantGauche(etatClignotantGauche);
            etatClignotantGauche = false; 
        }
        
    }//GEN-LAST:event_bouttonClignoGaucheMousePressed

    private void bouttonClignoDroitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonClignoDroitMousePressed
        
        if(etatClignotantDroit == false)
        {
            liaison.ClignotantDroit(etatClignotantDroit);
            etatClignotantDroit = true;
        }
        else
        {
           liaison.ClignotantDroit(etatClignotantDroit);
            etatClignotantDroit = false; 
        }
        
    }//GEN-LAST:event_bouttonClignoDroitMousePressed

    private void bouttonArriereMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonArriereMousePressed
        
        vitesseVoiture = -1;
                    
        fieldVitesse.setText("R");
                
        liaison.Freiner(vitesseVoiture);   
        
    }//GEN-LAST:event_bouttonArriereMousePressed

    private void bouttonPiloteAutoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bouttonPiloteAutoMousePressed
        
        try {
            Direction direction = new Direction();
             
            for(int i=0; i<1; i++){
                direction.DirectionINI("Circuit_Bugatti.xml", true, 1200);
            }
            
            liaison.Acceler(0);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(TableauDeBord.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_bouttonPiloteAutoMousePressed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JProgressBar barRPM;
    private javax.swing.JButton bouttonAccelerer;
    private javax.swing.JButton bouttonArriere;
    private javax.swing.JToggleButton bouttonClignoDroit;
    private javax.swing.JToggleButton bouttonClignoGauche;
    private javax.swing.JButton bouttonDroite;
    private javax.swing.JToggleButton bouttonEssuiGlace;
    private javax.swing.JButton bouttonFrein;
    private javax.swing.JButton bouttonGauche;
    private javax.swing.JToggleButton bouttonPhareArriere;
    private javax.swing.JToggleButton bouttonPhareAvant;
    private javax.swing.JToggleButton bouttonPiloteAuto;
    private javax.swing.JToggleButton buttonWarning;
    public static javax.swing.JTextField fieldRPM;
    private javax.swing.JTextField fieldVitesse;
    // End of variables declaration//GEN-END:variables
}
